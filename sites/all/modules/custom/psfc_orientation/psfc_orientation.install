<?php
/**
 * @file
 */

/**
 * Implements hook_uninstall().
 */
function psfc_orientation_uninstall() {
  // Remove site variables.
  $query = db_query('SELECT name FROM variable WHERE name LIKE :varname', array(':varname' => db_like('psfc_orientation_') .'%'));
  foreach ($query as $result) {
    variable_del($result->name);
  }
}

/**
 * Implements hook_install().
 */
function psfc_orientation_install() {
  // Ensure default nodes are created.
  $dir = DRUPAL_ROOT . '/' . drupal_get_path('module', 'psfc_orientation') . '/default-content';
  $files = scandir($dir);
  while(list(,$file) = each($files)) {

    // This directory contains three files for each node we want to import
    // (title, body and alias). The files are named after the variable 
    // name their nid will be saved as (minus the psfc_orientation prefix), 
    // e.g. no_orientation.title, no_orientation.body, no_orientation.alias). 
    // We want to only scan for xxx.title and we'll find the rest of the file 
    // after we get the variable name.
    if(preg_match("/^([a-z_]+)\.title$/", $file, $matches)) {
      $variable_name = $matches[1];
      $title = file_get_contents("${dir}/${variable_name}.title");
      $body = file_get_contents("${dir}/${variable_name}.body");
      $alias = file_get_contents("${dir}/${variable_name}.alias");
      $node = entity_create('node', array('type' => 'page'));
      $node_wrapper = entity_metadata_wrapper('node', $node);
      $node_wrapper->author->set(0);
      $node_wrapper->status->set(1);
      $node_wrapper->comment->set(0);
      $node_wrapper->promote->set(0);
      $node_wrapper->sticky->set(0);
      $node_wrapper->title->set($title);
      $node_wrapper->body->set(array('value' => $body));
      // $node_wrapper->alias->set($alias);
      $node_wrapper->save();
      $nid = $node_wrapper->nid->value();
      variable_get('psfc_orientation_' . $variable_name, $nid);
    }
  }
}


/**
 * Implements hook_schema().
 */
function psfc_orientation_schema() {
  $schema['psfc_orientation_repeat_rules'] = array(
    'description' => 'PSFC Orientation repeat',
    'fields' => array(
      'orid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique Orientation Rule ID.',
      ),
      'day_of_week' => array(
        'type' => 'text',
        'size' => 'tiny',
        'description' => 'The day of the week of an orientation',
      ),
      'time_of_day' => array(
        'type' => 'text',
        'size' => 'tiny',
        'description' => 'The time of an orientation',
      ),
      'capacity' => array(
        'type' => 'int',
        'size' => 'tiny',
        'description' => 'Capacity of the orientation',
      ),
    ),
    'primary key' => array('orid'),
  );

  $schema['psfc_orientation_blackout_days'] = array(
    'description' => 'PSFC Orientation Blackout dates',
    'fields' => array(
      'obid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique Orientation Blackout date ID.',
      ),
      'blackout_date' => array(
        'mysql_type' => 'DATETIME',
        'pgsql_type' => 'timestamp without time zone',
        'not null' => TRUE,
        'description' => 'An orientation blackout date.',
      ),
    ),
    'primary key' => array('obid'),
  );

  return $schema;
}

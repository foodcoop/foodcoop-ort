<?php
/**
 * @file PSFC Orientation module
 *./

/**
 * Implementation of hook_perm().
 */
function psfc_orientation_perm() {
  return array(
    'administer psfc orientation',
    'sign up for psfc orientation'
    );
}

/**
 * Implementation of hook_menu().
 */
function psfc_orientation_menu() {
  $items = array();

  // this should probably live in a generic helper module.
  // it lives here because this module got here first --nat
  $items['admin/psfc'] = array(
    'title' => 'PSFC Admin Page',
    'description' => 'An Admin landing page for psfc pages',
    'access arguments' => array( 'administer psfc orientation'),
    'page callback' => 'psfc_orientation_temp_admin_land',
  );

  $items['admin/psfc/orientation'] = array(
    'title' => 'PSFC Orientation Settings',
    'description' => 'Allow coop workers to change orientation settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('psfc_orientation_admin_page'),
    'access arguments' => array( 'administer psfc orientation'),
    'type' => 'MENU_DEFAULT_LOCAL_TASK'
  );
  $items['admin/psfc/orientation/add-rule'] = array(
    'title' => 'Create a new Orientation rule',
    'description' => 'Create a new orientation rule.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('psfc_orientation_admin_add_rule'),
    'access arguments' => array( 'administer psfc orientation'),
    'type' => 'MENU_LOCAL_TASK'
  );

  return $items;
}

/**
 * Default Administration page
 */
function psfc_orientation_admin_page() {
  $form = array();
  $form['orientation_description'] = array(
    '#type' => 'textarea',
    '#title' => t('Default Orientation Description'),
    '#default_value' => (!$edit) ? NULL : $edit['orientation_description'],
    '#description' => t("This is the description that will be put on the auto generated orientations."),
  );
  return $form;
}

function psfc_orientation_admin_add_rule($edit) {
  $form = array();
  $form['day'] = array(
    '#type' => 'select',
    '#title' => t('Day'),
    '#options' => array(
      'Sunday' => 'Sunday',
      'Monday' =>  'Monday',
      'Tuesday' =>  'Tuesday',
      'Wednesday' => 'Wednesday',
      'Thursday' => 'Thursday',
      'Friday' => 'Friday',
      'Saturday' => 'Saturday',
    ),
    '#required' => TRUE,
    '#default_value' => (!$edit) ? NULL : $edit['day'],
  );
  $form['hour'] = array(
    '#type' => 'select',
    '#title' => 'Hour',
    '#options' => array(
      '01' => 1,
      '02' => 2,
      '03' => 3,
      '04' => 4,
      '05' => 5,
      '06' => 6,
      '07' => 7,
      '08' => 8,
      '09' => 9,
      '10' => 10,
      '11' => 11,
      '12' => 12,
    ),
    '#required' => TRUE
  );
  $form['min'] = array(
    '#type' => 'select',
    '#title' => 'Minute',
    '#options' => array(
      '00' => '00',
      '15' => '15',
      '30' => '30',
      '45' => '45',
    ),
    '#required' => TRUE
  );
  $form['ampm'] = array(
    '#type' => 'select',
    '#title' => 'AM / PM',
    '#options' => array(
      'AM' => 'AM',
      'PM' => 'PM',
    ),
    '#required' => TRUE,
  );

  $form['capacity'] = array(
    '#type' => 'textfield',
    '#title' => t('Capacity'),
    '#default_value' => (!$edit) ? NULL : $edit[0]['capacity'],
    '#description' => t("The total number of spaces available for this orientation."),
    '#size' => 2,
    '#maxlength' => 2,
    '#required' => TRUE
  );
  $form['submit'] = array('#type' => 'submit', '#value' => t('Add'));
  return $form;
}

function psfc_orientation_admin_add_rule_validate($form, &$form_state) {
  $values = $form_state['values'];

  if (date('l') == $values['day']) {
    $two_weeks = time() + ( 60 * 60 * 24 *14);
    $date = date('l F d', $two_weeks);
    $string = $date .' '. $values['hour'] .':'. $values['min'] .' '. $values['ampm'];
   $next_orientation = strtotime($string);
  }
  dsm($next_orientation);
  dsm(strtotime('Sunday June 22 2010 04:45 PM'));

//  dsm('form');
//  dsm($form);
//  dsm("form_state");
//  dsm($form_state);

 return;
}

function psfc_orientation_temp_admin_land() {
  return 'temp';
}
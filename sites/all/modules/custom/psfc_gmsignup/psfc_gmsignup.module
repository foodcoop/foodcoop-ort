<?php
function psfc_gmsignup_menu()
{
	$items['gmsignup'] = array(
	'title' => 'General Meeting Signup Form',
	'description' => 'PSFC General Signup Form',
	'page callback' => 'drupal_get_form',
	'page arguments' => array('psfc_gmsignup_form'),
	'access callback' => TRUE
	);
	
	return $items;
}

function psfc_gmsignup_form($form, &$form_state)
{
	global $user;
	if ($user->uid == 0) {drupal_goto('user');}
	
	$result = db_query('SELECT fgmd.field_gm_date_value, n.nid FROM {field_data_field_gm_date} fgmd JOIN node n ON fgmd.bundle=n.type AND fgmd.revision_id=n.vid WHERE fgmd.field_gm_date_value > UNIX_TIMESTAMP() ORDER BY fgmd.field_gm_date_value LIMIT 1');
	$gm = $result->fetchAssoc();
	
	$gm_date = date('l F j, Y \a\t g:m a', $gm['field_gm_date_value']);
	// dsm($gm_date);
	
	$form['gmid'] = array(
	'#type' => 'value',
	'#value' => $gm['nid']
	);
	
	$form['text_top'] = array(
	'#type' => 'markup',
    '#markup' => '<div style="font-size: 14pt; font-weight: bold;">General Meeting on ' . $gm_date . '</div><div style="margin-bottom: 20px;">Please provide the information below for the person who will actually be ATTENDING the GM:</div>'
  	);
	
	$form['first_name'] = array(
    '#type' => 'textfield',
    '#title' => 'First Name',
    '#size' => 20,
    '#maxlength' => 50,
    '#required' => TRUE
  	);
  	
  	$form['last_name'] = array(
    '#type' => 'textfield',
    '#title' => 'Last Name',
    '#size' => 20,
    '#maxlength' => 50,
    '#required' => TRUE
  	);
  	
  	/*
  	$form['email'] = array(
    '#type' => 'textfield',
    '#title' => 'Email',
    '#size' => 20,
    '#maxlength' => 50,
    '#required' => TRUE
  	);
  	*/
  	
  	$form['member_number'] = array(
    '#type' => 'textfield',
    '#title' => 'Member Number',
    '#size' => 20,
    '#maxlength' => 10,
    '#required' => TRUE
  	);
  	
  	$form['credit'] = array(
    '#type' => 'radios',
    '#options' => array('credit_attendee' => 'and will also receive the workslot credit for meeting attendance.', 'credit_other' => '<b>but</b> the work credit should be applied to another member\'s record.'),
    '#default_value' => 'credit_attendee',
    '#required' => TRUE,
    // '#prefix' => '<div style="border: 1px solid orange; padding: 5px;">',
    // '#suffix' => '</div>',
  	);
  	
  	$form['other_member'] = array(
    '#type' => 'fieldset',
    '#title' => t('Apply credit to this member:'),
    '#states' => array('visible' => array(':input[name="credit"]' => array('value' => 'credit_other')))
  	);
  	
  	$form['other_member']['first_name_credit'] = array(
    '#type' => 'textfield',
    '#title' => 'First Name',
    '#size' => 20,
    '#maxlength' => 50,
    '#states' => array('required' => array(':input[name="credit"]' => array('value' => 'credit_other')), 'visible' => array(':input[name="credit"]' => array('value' => 'credit_other')))
  	);
  	
  	$form['other_member']['last_name_credit'] = array(
    '#type' => 'textfield',
    '#title' => 'Last Name',
    '#size' => 20,
    '#maxlength' => 50,
    '#states' => array('required' => array(':input[name="credit"]' => array('value' => 'credit_other')), 'visible' => array(':input[name="credit"]' => array('value' => 'credit_other')))
  	);
  	
  	$form['other_member']['member_number_credit'] = array(
    '#type' => 'textfield',
    '#title' => 'Member Number',
    '#size' => 20,
    '#maxlength' => 10,
    '#states' => array('required' => array(':input[name="credit"]' => array('value' => 'credit_other')), 'visible' => array(':input[name="credit"]' => array('value' => 'credit_other')))
  	);
  	
  	$form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Sign Up for General Meeting')
  	);
 
  	return $form;
}

function psfc_gmsignup_form_validate($form, &$form_state)
{
	// echo '<pre>'; print_r($form_state); echo '</pre>';
	
	// if ($form_state['values']['first_name'] == '') {form_set_error('first_name', t('First Name required'));}
	// if ($form_state['values']['last_name'] == '') {form_set_error('last_name', t('Last Name required'));}
	// if ($form_state['values']['email'] == '') {form_set_error('email', t('Email required'));}
	// if ($form_state['values']['member_number'] == '') {form_set_error('member_number', t('Member Number required'));}
	
	$member_number = preg_replace('/[^0-9]/i', '', $form_state['values']['member_number']);
	$form_state['values']['member_number'] = $member_number;
	$form_state['complete form']['member_number']['#value'] = $member_number;
	
	// form_set_value($form['member_number'], $member_number, $form_state);
	// $form_state['rebuild'] = TRUE;
		
	if (!is_numeric($form_state['values']['member_number'])) {form_set_error('member_number', t('Member Number must be numeric'));}
	if (strlen($form_state['values']['member_number']) < 5) {form_set_error('member_number', t('Invalid Member Number'));}
	
	if ($form_state['values']['credit'] == 'credit_other')
	{
		$member_number_credit = preg_replace('/[^0-9]/i', '', $form_state['values']['member_number_credit']);
		$form_state['values']['member_number_credit'] = $member_number_credit;
		$form_state['complete form']['other_member']['member_number_credit']['#value'] = $member_number_credit;
		
		if ($form_state['values']['first_name_credit'] == '') {form_set_error('first_name_credit', t('First Name required'));}
		if ($form_state['values']['last_name_credit'] == '') {form_set_error('last_name_credit', t('Last Name required'));}
		if ($form_state['values']['member_number_credit'] == '') {form_set_error('member_number_credit', t('Member Number required'));}
		
		if (!is_numeric($form_state['values']['member_number_credit'])) {form_set_error('member_number_credit', t('Member Number must be numeric'));}
		if (strlen($form_state['values']['member_number_credit']) < 5) {form_set_error('member_number_credit', t('Invalid Member Number'));}
	}
	
	// echo '<pre>'; print_r($form_state); echo '</pre>';
}

function psfc_gmsignup_form_submit($form, &$form_state)
{
	// echo '<pre>'; print_r($form_state); echo '</pre>';
	drupal_set_message(t('We have received your request to attend the GM for credit. The Membership Office will review your request in order to confirm your eligibility to receive credit. If you are confirmed, we will send you an e-mail confirmation within 5 days of today.'));
}

